#include "EasyBMP.h"
#include "EasyBMP_Geometry.h"
#include "EasyBMP_Font.h"
#include "AdditionalSource.h"

using namespace std;

void CreateBlueColorTable( BMP& InputImage )
{
	int BitDepth = InputImage.TellBitDepth();
	if( BitDepth != 1 && BitDepth != 4 && BitDepth != 8 ){ return; }
	int NumberOfColors = IntPow(2,BitDepth); int i;
	ebmpBYTE StepSize;
	if( BitDepth != 1 )
	{ StepSize = 255/(NumberOfColors-1); }
	else
	{ StepSize = 255; }
	for( i=0 ; i < NumberOfColors ; i++)
	{
	RGBApixel Temp;
	Temp.Blue
	= i*StepSize;
	Temp.Green = 0;
	Temp.Red = 0;
	Temp.Alpha = 0;
	InputImage.SetColor(i,Temp);
	}
}

void DibujarRecorrido(BMP& InputImage, int LongOrigen, int LatOrigen, int LongDestino, int LatDestino, RGBApixel Color ){

	char coordenadas [10];
	strcpy( coordenadas , " (12,35)");

	 PrintString( InputImage, coordenadas, 300, 620, 30, Color);
	 /*PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);*/

	DrawFastLine( AnImage, 345, 654, 564, 432, Black);
	//DrawFastLine( AnImage, 345, 654, 564, 432, Black);

}


int main(){

	BMP AnImage;
	// Set size to 640 Ã— 480
	AnImage.SetSize(999,999);
	// Set its color depth to 8-bits
	AnImage.SetBitDepth(8);

	RGBApixel Black;
	Black.Red = 0;
	Black.Green = 0;
	Black.Blue = 0;

	CreateBlueColorTable( AnImage );

	DibujarRecorrido(AnImage, 345, 215, 567, 643, Black);

	// Guardar Imagen
	AnImage.WriteToFile("Recorrido.bmp");


	return 0;
}


