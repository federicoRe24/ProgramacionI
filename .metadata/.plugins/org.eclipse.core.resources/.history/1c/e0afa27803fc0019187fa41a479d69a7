#include "EasyBMP.h"
#include "EasyBMP_Geometry.h"
#include "EasyBMP_Font.h"
#include "AdditionalSource.h"

using namespace std;

void CreateRedColorTable( BMP& InputImage )
{
int BitDepth = InputImage.TellBitDepth();
if( BitDepth != 1 && BitDepth != 4 && BitDepth != 8 ){ return; }
int NumberOfColors = IntPow(2,BitDepth); int i;
ebmpBYTE StepSize;
if( BitDepth != 1 )
{ StepSize = 255/(NumberOfColors-1); }
else
{ StepSize = 255; }
for( i=0 ; i < NumberOfColors ; i++)
{
RGBApixel Temp;
Temp.Red
= i*StepSize;
Temp.Green = 0;
Temp.Blue = 0;
Temp.Alpha = 0;
InputImage.SetColor(i,Temp);
}
}


int main(){

	BMP AnImage;
	// Set size to 640 Ã— 480
	AnImage.SetSize(999,999);
	// Set its color depth to 8-bits
	AnImage.SetBitDepth(8);

	RGBApixel Black;
	Black.Red = 0;
	Black.Green = 0;
	Black.Blue = 0;

	//Cambiar color imagen
	for(int i = 0; i < 256; i++){
		AnImage.SetColor(i,Black);
	}

	/*for(int i=0 ; i < 256 ; i++)
	{
	RGBApixel Temp;
	Temp.Red
	= i*256;
	Temp.Green = 0;
	Temp.Blue = 0;
	Temp.Alpha = 0;
	AnImage.SetColor(i,Temp);
	}*/

	//CreateRedColorTable( AnImage );

	char TextString1 [10];
	TextString1[0] = 'B';
	TextString1[1] = 'R';
	TextString1[2] = 'I';
	TextString1[3] = 'A';
	TextString1[4] = 'N';
	TextString1[5] = ' ';
	TextString1[6] = 'P';
	TextString1[7] = 'U';
	TextString1[8] = 'T';
	TextString1[9] = 'O';

	RGBApixel Blue;
	Blue.Red = 0;
	Blue.Green = 0;
	Blue.Blue = 255;


	 PrintString( AnImage, TextString1, 50, 50, 50, Blue);
	 /*PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);*/

	// Guardar Imagen
	AnImage.WriteToFile("Recorrido.bmp");


	//DrawFastLine( AnImage, 345, 654, 564, 432, Black);


	return 0;
}


