#include "EasyBMP.h"
#include "EasyBMP_Geometry.h"
#include "EasyBMP_Font.h"
#include "AdditionalSource.h"

using namespace std;

void CreateBlackColorTable( BMP& InputImage )
{
	int BitDepth = InputImage.TellBitDepth();
	if( BitDepth != 1 && BitDepth != 4 && BitDepth != 8 ){ return; }
	int NumberOfColors = IntPow(2,BitDepth); int i;
	ebmpBYTE StepSize;
	if( BitDepth != 1 )
	{ StepSize = 255/(NumberOfColors-1); }
	else
	{ StepSize = 255; }
	for( i=0 ; i < NumberOfColors ; i++)
	{
	RGBApixel Temp;
	Temp.Black
	= i*StepSize;
	Temp.Green = 0;
	Temp.Blue = 0;
	Temp.Alpha = 0;
	InputImage.SetColor(i,Temp);
	}
}

int main(){

	BMP AnImage;
	AnImage.ReadFromFile("mapa.bmp");
	// Set size to 640 Ã— 480
	AnImage.SetSize(1024,768);
	// Set its color depth to 8-bits
	AnImage.SetBitDepth(8);

	RGBApixel Black;
	 Black.Red = 0;
	 Black.Green = 0;
	 Black.Blue = 0;

	// Cambiar color imagen

	/*for(int i = 0; i < 256; i++){

		AnImage.SetColor(i,Black);
	}*/

	 // Create a grayscale color table
	//CreateRedColorTable( AnImage );

	char TextString1 [10];
	TextString1[0] = 'B';
	TextString1[1] = 'R';
	TextString1[2] = 'I';
	TextString1[3] = 'A';
	TextString1[4] = 'N';
	TextString1[5] = ' ';
	TextString1[6] = 'P';
	TextString1[7] = 'U';
	TextString1[8] = 'T';
	TextString1[9] = 'O';

	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 /*PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);
	 PrintString( AnImage, TextString1, 50, 50, 50, Black);*/

	// Guardar Imagen
	AnImage.WriteToFile("sample.bmp");



	/*for(int i = 0; i < 300; i++){

		AnImage(i,i)->Red	= 50;
		AnImage(i,i)->Green = 50;
		AnImage(i,i)->Blue = 192;
		AnImage(i,i)->Alpha = 0;
	}

	for(int i = 300; i < 700; i++){

		AnImage(300,i)->Red	= 50;
		AnImage(300,i)->Green = 50;
		AnImage(300,i)->Blue = 192;
		AnImage(300,i)->Alpha = 0;
	}

	for(int i = 300; i < 768; i++){

		AnImage(i,700)->Red	= 50;
		AnImage(i,700)->Green = 50;
		AnImage(i,700)->Blue = 192;
		AnImage(i,700)->Alpha = 0;
	}*/


	//DrawFastLine( AnImage, 345, 654, 564, 432, Black);


	return 0;
}


